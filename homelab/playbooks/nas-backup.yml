- name: Rclone Backup to Google Cloud Storage
  hosts: nas
  gather_facts: false
  roles:
    - role: google-service-account
      vars:
        service_account_file: "{{ rclone_service_account_file }}"
        service_account_name: "{{ rclone_service_account_name | default('rclone') }}"
  tasks:
    - name: Ensure environment variables are set
      block:
        - name: Check if required environment variables are set and not empty
          ansible.builtin.assert:
            that:
              - rclone_config is defined and rclone_config | length > 0
              - rclone_remote is defined and rclone_remote | length > 0
              - rclone_service_account_file is defined and rclone_service_account_file | length > 0
              - rclone_backup_sources is defined and rclone_backup_sources | length > 0
              - google_cloud_backup_bucket is defined and google_cloud_backup_bucket | length > 0
              - google_cloud_bootstrap_bucket is defined and google_cloud_bootstrap_bucket | length > 0
            fail_msg: "One or more required environment variables are not set."

    - name: Ensure rclone config file exists (create empty if not)
      ansible.builtin.copy:
        dest: "{{ rclone_config }}"
        content: |
          [drive]
        mode: '0600'
        force: false  # do not overwrite existing file

    - name: Import existing rclone credentials (drive token, client_id, client_secret)
      ansible.builtin.set_fact:
        # Drive secrets are only needed when using drive, can be empty for gcs.
        rclone_drive_token:         "{{ lookup('ini', 'token',           section='drive', file=rclone_config) }}"
        rclone_drive_client_id:     "{{ lookup('ini', 'client_id',       section='drive', file=rclone_config) }}"
        rclone_drive_client_secret: "{{ lookup('ini', 'client_secret',   section='drive', file=rclone_config) }}"
        # GCS needs a service account email and file for ADC auth
        rclone_service_account_email: "{{ rclone_service_account_name }}@{{ google_cloud_project }}.iam.gserviceaccount.com"
      no_log: true

    - name: "Create rclone config with credentials and GCS settings, template: playbooks/templates/rclone.conf.j2"
      ansible.builtin.template:
        src: rclone.conf.j2
        dest: "{{ rclone_config }}"
        mode: '0600'
      no_log: true

    - name: "Show paths"
      ansible.builtin.debug:
        msg:
          - "Rclone config: {{ rclone_config }}"
          - "Service Account file: {{ rclone_service_account_file }}"
          - "Rclone remote: {{ rclone_remote }}"
          - "Backup sources: {{ rclone_backup_sources }}"
          - "Rclone Drive token (length): {{ rclone_drive_token | length }}"
          - "Rclone Drive client_id (length): {{ rclone_drive_client_id | length }}"
          - "Rclone Drive client_secret (length): {{ rclone_drive_client_secret | length }}"

    - name: "Perform rclone check {{ rclone_remote }}"
      ansible.builtin.command:
        cmd: >
          rclone ls {{ rclone_remote }}:{{ google_cloud_backup_bucket }}
      changed_when: false

    - name: "Ensure rclone cannot access bootstrap bucket {{ google_cloud_bootstrap_bucket }}"
      ansible.builtin.command:
        cmd: >
          rclone ls {{ rclone_remote }}:{{ google_cloud_bootstrap_bucket }}
      changed_when: false
      no_log: true
      register: rclone_bootstrap_check
      failed_when: rclone_bootstrap_check.rc == 0
